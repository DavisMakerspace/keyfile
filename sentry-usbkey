#!/bin/bash

if (( $# != 2 )); then
  echo "Usage: $0 req <username> <keyfile>" >&2
  exit 0
fi
error() { echo "$0: error: $2" >&2; exit $1; }
username=$1
keypath=$2
if [[ ! -r "$keypath" ]]; then
  error 1 "cannot read $keypath"
fi
dev=/dev/block/$(udevadm info --device-id-of-file="$keypath")
info=$(udevadm info --path="$dev" | cut -c4- | sed 's/=/ /')
while read -a field; do
  [[ "${field[0]}" == "ID_PART_ENTRY_NUMBER" ]] && ID_PART_ENTRY_NUMBER=${field[1]}
  [[ "${field[0]}" == "ID_SERIAL" ]] && ID_SERIAL=${field[1]}
done <<< "$info"
if [[ -z "$ID_PART_ENTRY_NUMBER" || -z "$ID_SERIAL" ]]; then
  error 2 "cannot use device $dev to hold a key"
fi
keypath_cannon=$(readlink -e "$keypath")
keypath_mountpoint=$(stat --format="%m" "$keypath_cannon")
keypath_relative=${keypath_cannon:${#keypath_mountpoint}}
if [[ ! -r $keypath_mountpoint$keypath_relative ]]; then
  error 3 "could not determine relative path of key on device"
fi
echo "$ID_SERIAL $ID_PART_ENTRY_NUMBER $keypath_relative $username"
